/* Copyright (c) 2018 The Wizzeye Authors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply plugin: 'com.android.application'

def props = new Properties()
props.load(new FileInputStream(project.file('custom.properties')))

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId props.applicationId
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 6
        versionName "1.3.1"
        manifestPlaceholders = [
            hostScheme: props.hostScheme,
            hostName: props.hostName,
        ]
        resValue('string', "default_server", "${props.hostScheme}://${props.hostName}")
        resValue('string', "default_stun_hostname", "${props.stunServer}")
        buildConfigField('int', "PING_INTERVAL", "${props.pingInterval}")
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }
        staging {
            initWith debug
            applicationIdSuffix ".staging"
            manifestPlaceholders = [
                hostScheme: props.hostScheme,
                hostName: props.stagingHostName,
            ]
            resValue('string', "default_server", "${props.hostScheme}://${props.stagingHostName}")
        }
    }
    if (rootProject.hasProperty('storeFile')) {
        signingConfigs {
            release {
                storeFile rootProject.file(rootProject.storeFile)
                storePassword rootProject.storePassword
                keyAlias rootProject.keyAlias
                keyPassword rootProject.keyPassword
            }
        }
        buildTypes {
            release {
                signingConfig signingConfigs.release
            }
        }
    }
}

dependencies {
    implementation 'com.android.support:support-annotations:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.iristick.smartglass:core:1.0'
    implementation 'com.iristick.smartglass:support:1.0'
    implementation 'org.webrtc:google-webrtc:1.0.24616'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
}
